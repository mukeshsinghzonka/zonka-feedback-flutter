import 'package:hive/hive.dart';
import 'package:zonka_feedback/services/hive/hive_type_id.dart';

part 'udpate_survey_res_model.g.dart'; // This will be generated by Hive

@HiveType(typeId: HiveTypeId.updateResSurveyId) // Define a unique typeId for this model
class UpdateSurveyResModel extends HiveObject {
  @HiveField(0)
  final bool updatesAvailable;

  @HiveField(1)
  final bool isDeleted;

  @HiveField(2)
  final String surveyId;

  UpdateSurveyResModel({
    required this.updatesAvailable,
    required this.isDeleted,
    required this.surveyId,
  });

  // Factory constructor to create an instance from JSON
  factory UpdateSurveyResModel.fromJson(Map<String, dynamic> json) {
    print("jsonvalue updatesAvailable: ${json['updatesAvailable']} "
          "isDeleted: ${json['isDeleted']} "
          "surveyId: ${json['surveyId']}");

    // Ensure that we cast values correctly
    return UpdateSurveyResModel(
      updatesAvailable: json['updatesAvailable'] is bool
          ? json['updatesAvailable']
          : ( json['updatesAvailable']=="true"?true:false ?? false), // default to false
      isDeleted: json['isDeleted'] is bool
          ? json['isDeleted']
          : (json['isDeleted'] =="true"?true:false?? false), // default to false
      surveyId: json['surveyId'] is String
          ? json['surveyId']
          : (json['surveyId'] ?? ""), // default to an empty string
    );}
  // Convert the model to a JSON object
  Map<String, dynamic> toJson() {
    return {
      'updatesAvailable': updatesAvailable,
      'isDeleted': isDeleted,
      'surveyId': surveyId,
    };
  }
}

