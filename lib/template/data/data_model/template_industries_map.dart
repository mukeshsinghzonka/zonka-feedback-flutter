import 'package:hive/hive.dart';
import 'package:zonka_feedback/services/hive/hive_type_id.dart';
part 'template_industries_map.g.dart'; // This will be generated by Hive after running build_runner

@HiveType(typeId: HiveTypeId.templateIndustriesMapId) // Unique typeId for TemplateIndustriesMap
class TemplateIndustriesMap extends HiveObject {
  @HiveField(0)
  final String? id;

  @HiveField(1)
  final String? name;

  @HiveField(2)
  final String? description;

  @HiveField(3)
  final List<dynamic>? subCategories;

  @HiveField(4)
  final bool? showInWeb;

  @HiveField(5)
  final bool? showInApp;

  @HiveField(6)
  final String? type;

  @HiveField(7)
  final String? icon;

  @HiveField(8)
  final String? heading;

  @HiveField(9)
  final String? subHeading;

  TemplateIndustriesMap({
    required this.id,
    required this.name,
    required this.description,
    required this.subCategories,
    required this.showInWeb,
    required this.showInApp,
    required this.type,
    required this.icon,
    required this.heading,
    required this.subHeading,
  });

  factory TemplateIndustriesMap.fromJson(Map<String, dynamic> json) =>
      TemplateIndustriesMap(
        id: json["_id"],
        name: json["name"],
        description: json["description"],
        subCategories: List<dynamic>.from(json["subCategories"].map((x) => x)),
        showInWeb: json["showInWeb"],
        showInApp: json["showInApp"],
        type: json["type"],
        icon: json["icon"],
        heading: json["heading"],
        subHeading: json["subHeading"],
      );

  Map<String, dynamic> toJson() => {
        "_id": id,
        "name": name,
        "description": description,
        "subCategories": List<dynamic>.from(subCategories!.map((x) => x)),
        "showInWeb": showInWeb,
        "showInApp": showInApp,
        "type": type,
        "icon": icon,
        "heading": heading,
        "subHeading": subHeading,
      };
}
